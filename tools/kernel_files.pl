#!/usr/bin/env perl
#
# Generates list of kernels & files from .cl sources.
#
# @author Mark Gates

undef $/;

use strict;
use English;
use Getopt::Std;

my %opts;
getopts( 'o:', \%opts );
my $output = $opts{'o'} or "kernel_files.cpp";

open( OUT, ">$output" ) or die( "Can't open '$output': $!\n" );
select OUT;

#
# print header
#
print <<EOT;
/*
 * Auto-generated by $PROGRAM_NAME
 */

#include "kernel_files.h"

// ----------------------------------------------------------------------
const struct kernel_files_t c_kernel_files[] = {
EOT


#
# print kernels
#
for my $arg ( sort( @ARGV )) {
	my($file) = $arg =~ m@([^/]+)$@;
	open( INPUT, $arg ) or die( $! );
	while( <INPUT> ) {
		while( m/__kernel \s* void \s* (\w+)/gx ) {
			printf( "{ %-40s %-24s },\n",
					"\"$1\",",
					"\"$file\"" );
		}
	}
	close( INPUT );
}


#
# print footer
#
print <<EOT;
};

const int c_kernel_files_len = sizeof(c_kernel_files) / sizeof(*c_kernel_files);
EOT

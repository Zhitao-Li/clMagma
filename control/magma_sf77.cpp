/*******************************************************************************
 *  This file is AUTOMATICALLY GENERATED by:
 *  ../tools/fortran_wrappers.pl ../include/magma_s.i
 *  Do not edit.
 ******************************************************************************/

#include <stdint.h>  // for uintptr_t

#include "magma.h"
#include "magma_mangling.h"

/*
 * typedef comming from fortran.h file provided in CUDADIR/src directory
 * it will probably change with future release of CUDA when they use 64 bit addresses
 */
typedef size_t devptr_t;

#ifdef PGI_FORTRAN
    #define magma_idevptr(ptr_) ((int*)               (ptr_))
    #define magma_zdevptr(ptr_) ((magmaDoubleComplex*)(ptr_))
    #ifndef magma_cdevptr
    #define magma_cdevptr(ptr_) ((magmaFloatComplex*) (ptr_))
    #endif
    #ifndef magma_ddevptr
    #define magma_ddevptr(ptr_) ((double*)            (ptr_))
    #endif
    #ifndef magma_sdevptr
    #define magma_sdevptr(ptr_) ((float*)             (ptr_))
    #endif
#else
    #define magma_idevptr(ptr_) ((int*)               (uintptr_t)(*(ptr_)))
    #define magma_zdevptr(ptr_) ((magmaDoubleComplex*)(uintptr_t)(*(ptr_)))
    #ifndef magma_cdevptr
    #define magma_cdevptr(ptr_) ((magmaFloatComplex*) (uintptr_t)(*(ptr_)))
    #endif
    #ifndef magma_ddevptr
    #define magma_ddevptr(ptr_) ((double*)            (uintptr_t)(*(ptr_)))
    #endif
    #ifndef magma_sdevptr
    #define magma_sdevptr(ptr_) ((float*)             (uintptr_t)(*(ptr_)))
    #endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

#define magmaf_get_spotrf_nb FORTRAN_NAME( magmaf_get_spotrf_nb, MAGMAF_GET_SPOTRF_NB )
magma_int_t magmaf_get_spotrf_nb( magma_int_t *m )
{
    return magma_get_spotrf_nb( *m );
}

#define magmaf_get_sgetrf_nb FORTRAN_NAME( magmaf_get_sgetrf_nb, MAGMAF_GET_SGETRF_NB )
magma_int_t magmaf_get_sgetrf_nb( magma_int_t *m )
{
    return magma_get_sgetrf_nb( *m );
}

#define magmaf_get_sgetri_nb FORTRAN_NAME( magmaf_get_sgetri_nb, MAGMAF_GET_SGETRI_NB )
magma_int_t magmaf_get_sgetri_nb( magma_int_t *m )
{
    return magma_get_sgetri_nb( *m );
}

#define magmaf_get_sgeqrf_nb FORTRAN_NAME( magmaf_get_sgeqrf_nb, MAGMAF_GET_SGEQRF_NB )
magma_int_t magmaf_get_sgeqrf_nb( magma_int_t *m )
{
    return magma_get_sgeqrf_nb( *m );
}

#define magmaf_get_sgeqlf_nb FORTRAN_NAME( magmaf_get_sgeqlf_nb, MAGMAF_GET_SGEQLF_NB )
magma_int_t magmaf_get_sgeqlf_nb( magma_int_t *m )
{
    return magma_get_sgeqlf_nb( *m );
}

#define magmaf_get_sgehrd_nb FORTRAN_NAME( magmaf_get_sgehrd_nb, MAGMAF_GET_SGEHRD_NB )
magma_int_t magmaf_get_sgehrd_nb( magma_int_t *m )
{
    return magma_get_sgehrd_nb( *m );
}

#define magmaf_get_ssytrd_nb FORTRAN_NAME( magmaf_get_ssytrd_nb, MAGMAF_GET_SSYTRD_NB )
magma_int_t magmaf_get_ssytrd_nb( magma_int_t *m )
{
    return magma_get_ssytrd_nb( *m );
}

#define magmaf_get_sgelqf_nb FORTRAN_NAME( magmaf_get_sgelqf_nb, MAGMAF_GET_SGELQF_NB )
magma_int_t magmaf_get_sgelqf_nb( magma_int_t *m )
{
    return magma_get_sgelqf_nb( *m );
}

#define magmaf_get_sgebrd_nb FORTRAN_NAME( magmaf_get_sgebrd_nb, MAGMAF_GET_SGEBRD_NB )
magma_int_t magmaf_get_sgebrd_nb( magma_int_t *m )
{
    return magma_get_sgebrd_nb( *m );
}

#define magmaf_get_ssygst_nb FORTRAN_NAME( magmaf_get_ssygst_nb, MAGMAF_GET_SSYGST_NB )
magma_int_t magmaf_get_ssygst_nb( magma_int_t *m )
{
    return magma_get_ssygst_nb( *m );
}

#define magmaf_get_sgesvd_nb FORTRAN_NAME( magmaf_get_sgesvd_nb, MAGMAF_GET_SGESVD_NB )
magma_int_t magmaf_get_sgesvd_nb( magma_int_t *m )
{
    return magma_get_sgesvd_nb( *m );
}

#define magmaf_sgebrd FORTRAN_NAME( magmaf_sgebrd, MAGMAF_SGEBRD )
void magmaf_sgebrd(
    magma_int_t *m, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *d,
    float *e,
    float *tauq,
    float *taup,
    float *work, magma_int_t *lwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_sgebrd(
        *m, *n,
        a, *lda,
        d,
        e,
        tauq,
        taup,
        work, *lwork,
        info, *queue );
}

#define magmaf_sgeqrf FORTRAN_NAME( magmaf_sgeqrf, MAGMAF_SGEQRF )
void magmaf_sgeqrf(
    magma_int_t *m, magma_int_t *n,
    float *A, magma_int_t *lda,
    float *tau,
    float *work, magma_int_t *lwork,
    magma_int_t *info,
    magma_queue_t *queue )
{
    magma_sgeqrf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info,
        queue );
}

#define magmaf_sgesv FORTRAN_NAME( magmaf_sgesv, MAGMAF_SGESV )
void magmaf_sgesv(
    magma_int_t *n, magma_int_t *nrhs,
    float *A, magma_int_t *lda,
    magma_int_t *ipiv,
    float *B, magma_int_t *ldb,
    magma_int_t *info,
    magma_queue_t *queue )
{
    magma_sgesv(
        *n, *nrhs,
        A, *lda,
        ipiv,
        B, *ldb,
        info,
        queue );
}

#define magmaf_sgetrf FORTRAN_NAME( magmaf_sgetrf, MAGMAF_SGETRF )
void magmaf_sgetrf(
    magma_int_t *m, magma_int_t *n,
    float *A, magma_int_t *lda,
    magma_int_t *ipiv,
    magma_int_t *info,
    magma_queue_t *queue )
{
    magma_sgetrf(
        *m, *n,
        A, *lda,
        ipiv,
        info,
        queue );
}

#define magmaf_sposv FORTRAN_NAME( magmaf_sposv, MAGMAF_SPOSV )
void magmaf_sposv(
    magma_uplo_t *uplo, magma_int_t *n, magma_int_t *nrhs,
    float *A, magma_int_t *lda,
    float *B, magma_int_t *ldb,
    magma_int_t *info,
    magma_queue_t *queue )
{
    magma_sposv(
        *uplo, *n, *nrhs,
        A, *lda,
        B, *ldb,
        info,
        queue );
}

#define magmaf_spotrf FORTRAN_NAME( magmaf_spotrf, MAGMAF_SPOTRF )
void magmaf_spotrf(
    magma_uplo_t *uplo, magma_int_t *n,
    float *A, magma_int_t *lda,
    magma_int_t *info,
    magma_queue_t *queue )
{
    magma_spotrf(
        *uplo, *n,
        A, *lda,
        info,
        queue );
}

#define magmaf_sorghr FORTRAN_NAME( magmaf_sorghr, MAGMAF_SORGHR )
void magmaf_sorghr(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    float *a, magma_int_t *lda,
    float *tau, magmaFloat_ptr *dT, size_t *dT_offset, magma_int_t *nb,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_sorghr(
        *n, *ilo, *ihi,
        a, *lda,
        tau, *dT, *dT_offset, *nb,
        info, *queue );
}

#define magmaf_sorgqr FORTRAN_NAME( magmaf_sorgqr, MAGMAF_SORGQR )
void magmaf_sorgqr(
    magma_int_t *m, magma_int_t *n, magma_int_t *k,
    float *a, magma_int_t *lda,
    float *tau, magmaFloat_ptr *dT, size_t *dT_offset, magma_int_t *nb,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_sorgqr(
        *m, *n, *k,
        a, *lda,
        tau, *dT, *dT_offset, *nb,
        info, *queue );
}

#define magmaf_sormtr FORTRAN_NAME( magmaf_sormtr, MAGMAF_SORMTR )
void magmaf_sormtr(
    magma_side_t *side, magma_uplo_t *uplo, magma_trans_t *trans, magma_int_t *m, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *tau,
    float *c, magma_int_t *ldc,
    float *work, magma_int_t *lwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_sormtr(
        *side, *uplo, *trans, *m, *n,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info, *queue );
}

#define magmaf_sormqr FORTRAN_NAME( magmaf_sormqr, MAGMAF_SORMQR )
void magmaf_sormqr(
    magma_side_t *side, magma_trans_t *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    float *a, magma_int_t *lda,
    float *tau,
    float *c, magma_int_t *ldc,
    float *work, magma_int_t *lwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_sormqr(
        *side, *trans, *m, *n, *k,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info, *queue );
}

#define magmaf_sormql FORTRAN_NAME( magmaf_sormql, MAGMAF_SORMQL )
void magmaf_sormql(
    magma_side_t *side, magma_trans_t *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    float *a, magma_int_t *lda,
    float *tau,
    float *c, magma_int_t *ldc,
    float *work, magma_int_t *lwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_sormql(
        *side, *trans, *m, *n, *k,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info, *queue );
}

#define magmaf_sgeev FORTRAN_NAME( magmaf_sgeev, MAGMAF_SGEEV )
void magmaf_sgeev(
    magma_vec_t *jobvl, magma_vec_t *jobvr, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *WR,
    float *WI,
    float *vl, magma_int_t *ldvl,
    float *vr, magma_int_t *ldvr,
    float *work, magma_int_t *lwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_sgeev(
        *jobvl, *jobvr, *n,
        a, *lda,
        WR,
        WI,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        info, *queue );
}

#define magmaf_sgesvd FORTRAN_NAME( magmaf_sgesvd, MAGMAF_SGESVD )
void magmaf_sgesvd(
    magma_vec_t *jobu, magma_vec_t *jobvt, magma_int_t *m, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *s,
    float *u, magma_int_t *ldu,
    float *vt, magma_int_t *ldvt,
    float *work, magma_int_t *lwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_sgesvd(
        *jobu, *jobvt, *m, *n,
        a, *lda,
        s,
        u, *ldu,
        vt, *ldvt,
        work, *lwork,
        info, *queue );
}

#define magmaf_ssyevd FORTRAN_NAME( magmaf_ssyevd, MAGMAF_SSYEVD )
void magmaf_ssyevd(
    magma_vec_t *jobz, magma_uplo_t *uplo, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *w,
    float *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_ssyevd(
        *jobz, *uplo, *n,
        a, *lda,
        w,
        work, *lwork,
        iwork, *liwork,
        info, *queue );
}

#define magmaf_sstedx FORTRAN_NAME( magmaf_sstedx, MAGMAF_SSTEDX )
void magmaf_sstedx(
    magma_range_t *range, magma_int_t *n, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    float*d,
    float*e,
    float*z, magma_int_t *ldz,
    float*rwork, magma_int_t *lrwork,
    magma_int_t*iwork, magma_int_t *liwork, magmaFloat_ptr *dwork,
    magma_int_t*info, magma_queue_t *queue )
{
    magma_sstedx(
        *range, *n, *vl, *vu, *il, *iu,
        d,
        e,
        z, *ldz,
        rwork, *lrwork,
        iwork, *liwork, *dwork,
        info, *queue );
}

#define magmaf_sgehrd FORTRAN_NAME( magmaf_sgehrd, MAGMAF_SGEHRD )
void magmaf_sgehrd(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    float *a, magma_int_t *lda,
    float *tau,
    float *work, magma_int_t *lwork, magmaFloat_ptr *dT, size_t *dT_offset,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_sgehrd(
        *n, *ilo, *ihi,
        a, *lda,
        tau,
        work, *lwork, *dT, *dT_offset,
        info, *queue );
}

#define magmaf_ssytrd FORTRAN_NAME( magmaf_ssytrd, MAGMAF_SSYTRD )
void magmaf_ssytrd(
    magma_uplo_t *uplo, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *d,
    float *e,
    float *tau,
    float *work, magma_int_t *lwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_ssytrd(
        *uplo, *n,
        a, *lda,
        d,
        e,
        tau,
        work, *lwork,
        info, *queue );
}

#define magmaf_sprint FORTRAN_NAME( magmaf_sprint, MAGMAF_SPRINT )
void magmaf_sprint(
    magma_int_t *m, magma_int_t *n,
    float *A, magma_int_t *lda )
{
    magma_sprint(
        *m, *n,
        A, *lda );
}


#ifdef __cplusplus
}
#endif

/*******************************************************************************
 *  This file is AUTOMATICALLY GENERATED by:
 *  ../tools/fortran_wrappers.pl ../include/magma_c.i
 *  Do not edit.
 ******************************************************************************/

#include <stdint.h>  // for uintptr_t

#include "magma.h"
#include "magma_mangling.h"

/*
 * typedef comming from fortran.h file provided in CUDADIR/src directory
 * it will probably change with future release of CUDA when they use 64 bit addresses
 */
typedef size_t devptr_t;

#ifdef PGI_FORTRAN
    #define magma_idevptr(ptr_) ((int*)               (ptr_))
    #define magma_zdevptr(ptr_) ((magmaDoubleComplex*)(ptr_))
    #ifndef magma_cdevptr
    #define magma_cdevptr(ptr_) ((magmaFloatComplex*) (ptr_))
    #endif
    #ifndef magma_ddevptr
    #define magma_ddevptr(ptr_) ((double*)            (ptr_))
    #endif
    #ifndef magma_sdevptr
    #define magma_sdevptr(ptr_) ((float*)             (ptr_))
    #endif
#else
    #define magma_idevptr(ptr_) ((int*)               (uintptr_t)(*(ptr_)))
    #define magma_zdevptr(ptr_) ((magmaDoubleComplex*)(uintptr_t)(*(ptr_)))
    #ifndef magma_cdevptr
    #define magma_cdevptr(ptr_) ((magmaFloatComplex*) (uintptr_t)(*(ptr_)))
    #endif
    #ifndef magma_ddevptr
    #define magma_ddevptr(ptr_) ((double*)            (uintptr_t)(*(ptr_)))
    #endif
    #ifndef magma_sdevptr
    #define magma_sdevptr(ptr_) ((float*)             (uintptr_t)(*(ptr_)))
    #endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

#define magmaf_get_cpotrf_nb FORTRAN_NAME( magmaf_get_cpotrf_nb, MAGMAF_GET_CPOTRF_NB )
magma_int_t magmaf_get_cpotrf_nb( magma_int_t *m )
{
    return magma_get_cpotrf_nb( *m );
}

#define magmaf_get_cgetrf_nb FORTRAN_NAME( magmaf_get_cgetrf_nb, MAGMAF_GET_CGETRF_NB )
magma_int_t magmaf_get_cgetrf_nb( magma_int_t *m )
{
    return magma_get_cgetrf_nb( *m );
}

#define magmaf_get_cgetri_nb FORTRAN_NAME( magmaf_get_cgetri_nb, MAGMAF_GET_CGETRI_NB )
magma_int_t magmaf_get_cgetri_nb( magma_int_t *m )
{
    return magma_get_cgetri_nb( *m );
}

#define magmaf_get_cgeqrf_nb FORTRAN_NAME( magmaf_get_cgeqrf_nb, MAGMAF_GET_CGEQRF_NB )
magma_int_t magmaf_get_cgeqrf_nb( magma_int_t *m )
{
    return magma_get_cgeqrf_nb( *m );
}

#define magmaf_get_cgeqlf_nb FORTRAN_NAME( magmaf_get_cgeqlf_nb, MAGMAF_GET_CGEQLF_NB )
magma_int_t magmaf_get_cgeqlf_nb( magma_int_t *m )
{
    return magma_get_cgeqlf_nb( *m );
}

#define magmaf_get_cgehrd_nb FORTRAN_NAME( magmaf_get_cgehrd_nb, MAGMAF_GET_CGEHRD_NB )
magma_int_t magmaf_get_cgehrd_nb( magma_int_t *m )
{
    return magma_get_cgehrd_nb( *m );
}

#define magmaf_get_chetrd_nb FORTRAN_NAME( magmaf_get_chetrd_nb, MAGMAF_GET_CHETRD_NB )
magma_int_t magmaf_get_chetrd_nb( magma_int_t *m )
{
    return magma_get_chetrd_nb( *m );
}

#define magmaf_get_cgelqf_nb FORTRAN_NAME( magmaf_get_cgelqf_nb, MAGMAF_GET_CGELQF_NB )
magma_int_t magmaf_get_cgelqf_nb( magma_int_t *m )
{
    return magma_get_cgelqf_nb( *m );
}

#define magmaf_get_cgebrd_nb FORTRAN_NAME( magmaf_get_cgebrd_nb, MAGMAF_GET_CGEBRD_NB )
magma_int_t magmaf_get_cgebrd_nb( magma_int_t *m )
{
    return magma_get_cgebrd_nb( *m );
}

#define magmaf_get_chegst_nb FORTRAN_NAME( magmaf_get_chegst_nb, MAGMAF_GET_CHEGST_NB )
magma_int_t magmaf_get_chegst_nb( magma_int_t *m )
{
    return magma_get_chegst_nb( *m );
}

#define magmaf_get_cgesvd_nb FORTRAN_NAME( magmaf_get_cgesvd_nb, MAGMAF_GET_CGESVD_NB )
magma_int_t magmaf_get_cgesvd_nb( magma_int_t *m )
{
    return magma_get_cgesvd_nb( *m );
}

#define magmaf_cgebrd FORTRAN_NAME( magmaf_cgebrd, MAGMAF_CGEBRD )
void magmaf_cgebrd(
    magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    float *d,
    float *e,
    magmaFloatComplex *tauq,
    magmaFloatComplex *taup,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_cgebrd(
        *m, *n,
        a, *lda,
        d,
        e,
        tauq,
        taup,
        work, *lwork,
        info, *queue );
}

#define magmaf_cgeqrf FORTRAN_NAME( magmaf_cgeqrf, MAGMAF_CGEQRF )
void magmaf_cgeqrf(
    magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info,
    magma_queue_t *queue )
{
    magma_cgeqrf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info,
        queue );
}

#define magmaf_cgesv FORTRAN_NAME( magmaf_cgesv, MAGMAF_CGESV )
void magmaf_cgesv(
    magma_int_t *n, magma_int_t *nrhs,
    magmaFloatComplex *A, magma_int_t *lda,
    magma_int_t *ipiv,
    magmaFloatComplex *B, magma_int_t *ldb,
    magma_int_t *info,
    magma_queue_t *queue )
{
    magma_cgesv(
        *n, *nrhs,
        A, *lda,
        ipiv,
        B, *ldb,
        info,
        queue );
}

#define magmaf_cgetrf FORTRAN_NAME( magmaf_cgetrf, MAGMAF_CGETRF )
void magmaf_cgetrf(
    magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    magma_int_t *ipiv,
    magma_int_t *info,
    magma_queue_t *queue )
{
    magma_cgetrf(
        *m, *n,
        A, *lda,
        ipiv,
        info,
        queue );
}

#define magmaf_cposv FORTRAN_NAME( magmaf_cposv, MAGMAF_CPOSV )
void magmaf_cposv(
    magma_uplo_t *uplo, magma_int_t *n, magma_int_t *nrhs,
    magmaFloatComplex *A, magma_int_t *lda,
    magmaFloatComplex *B, magma_int_t *ldb,
    magma_int_t *info,
    magma_queue_t *queue )
{
    magma_cposv(
        *uplo, *n, *nrhs,
        A, *lda,
        B, *ldb,
        info,
        queue );
}

#define magmaf_cpotrf FORTRAN_NAME( magmaf_cpotrf, MAGMAF_CPOTRF )
void magmaf_cpotrf(
    magma_uplo_t *uplo, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    magma_int_t *info,
    magma_queue_t *queue )
{
    magma_cpotrf(
        *uplo, *n,
        A, *lda,
        info,
        queue );
}

#define magmaf_cunghr FORTRAN_NAME( magmaf_cunghr, MAGMAF_CUNGHR )
void magmaf_cunghr(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *tau, magmaFloatComplex_ptr *dT, size_t *dT_offset, magma_int_t *nb,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_cunghr(
        *n, *ilo, *ihi,
        a, *lda,
        tau, *dT, *dT_offset, *nb,
        info, *queue );
}

#define magmaf_cungqr FORTRAN_NAME( magmaf_cungqr, MAGMAF_CUNGQR )
void magmaf_cungqr(
    magma_int_t *m, magma_int_t *n, magma_int_t *k,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *tau, magmaFloatComplex_ptr *dT, size_t *dT_offset, magma_int_t *nb,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_cungqr(
        *m, *n, *k,
        a, *lda,
        tau, *dT, *dT_offset, *nb,
        info, *queue );
}

#define magmaf_cunmtr FORTRAN_NAME( magmaf_cunmtr, MAGMAF_CUNMTR )
void magmaf_cunmtr(
    magma_side_t *side, magma_uplo_t *uplo, magma_trans_t *trans, magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *c, magma_int_t *ldc,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_cunmtr(
        *side, *uplo, *trans, *m, *n,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info, *queue );
}

#define magmaf_cunmqr FORTRAN_NAME( magmaf_cunmqr, MAGMAF_CUNMQR )
void magmaf_cunmqr(
    magma_side_t *side, magma_trans_t *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *c, magma_int_t *ldc,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_cunmqr(
        *side, *trans, *m, *n, *k,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info, *queue );
}

#define magmaf_cunmql FORTRAN_NAME( magmaf_cunmql, MAGMAF_CUNMQL )
void magmaf_cunmql(
    magma_side_t *side, magma_trans_t *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *c, magma_int_t *ldc,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_cunmql(
        *side, *trans, *m, *n, *k,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info, *queue );
}

#define magmaf_cgeev FORTRAN_NAME( magmaf_cgeev, MAGMAF_CGEEV )
void magmaf_cgeev(
    magma_vec_t *jobvl, magma_vec_t *jobvr, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *geev_w_array,
    magmaFloatComplex *vl, magma_int_t *ldvl,
    magmaFloatComplex *vr, magma_int_t *ldvr,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_cgeev(
        *jobvl, *jobvr, *n,
        a, *lda,
        geev_w_array,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        rwork,
        info, *queue );
}

#define magmaf_cgesvd FORTRAN_NAME( magmaf_cgesvd, MAGMAF_CGESVD )
void magmaf_cgesvd(
    magma_vec_t *jobu, magma_vec_t *jobvt, magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    float *s,
    magmaFloatComplex *u, magma_int_t *ldu,
    magmaFloatComplex *vt, magma_int_t *ldvt,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_cgesvd(
        *jobu, *jobvt, *m, *n,
        a, *lda,
        s,
        u, *ldu,
        vt, *ldvt,
        work, *lwork,
        rwork,
        info, *queue );
}

#define magmaf_cheevd FORTRAN_NAME( magmaf_cheevd, MAGMAF_CHEEVD )
void magmaf_cheevd(
    magma_vec_t *jobz, magma_uplo_t *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    float *w,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_cheevd(
        *jobz, *uplo, *n,
        a, *lda,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info, *queue );
}

#define magmaf_cstedx FORTRAN_NAME( magmaf_cstedx, MAGMAF_CSTEDX )
void magmaf_cstedx(
    magma_range_t *range, magma_int_t *n, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    float*d,
    float*e,
    magmaFloatComplex*z, magma_int_t *ldz,
    float*rwork, magma_int_t *lrwork,
    magma_int_t*iwork, magma_int_t *liwork, magmaFloat_ptr *dwork,
    magma_int_t*info, magma_queue_t *queue )
{
    magma_cstedx(
        *range, *n, *vl, *vu, *il, *iu,
        d,
        e,
        z, *ldz,
        rwork, *lrwork,
        iwork, *liwork, *dwork,
        info, *queue );
}

#define magmaf_cgehrd FORTRAN_NAME( magmaf_cgehrd, MAGMAF_CGEHRD )
void magmaf_cgehrd(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork, magmaFloatComplex_ptr *dT, size_t *dT_offset,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_cgehrd(
        *n, *ilo, *ihi,
        a, *lda,
        tau,
        work, *lwork, *dT, *dT_offset,
        info, *queue );
}

#define magmaf_chetrd FORTRAN_NAME( magmaf_chetrd, MAGMAF_CHETRD )
void magmaf_chetrd(
    magma_uplo_t *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    float *d,
    float *e,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info, magma_queue_t *queue )
{
    magma_chetrd(
        *uplo, *n,
        a, *lda,
        d,
        e,
        tau,
        work, *lwork,
        info, *queue );
}

#define magmaf_cprint FORTRAN_NAME( magmaf_cprint, MAGMAF_CPRINT )
void magmaf_cprint(
    magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda )
{
    magma_cprint(
        *m, *n,
        A, *lda );
}


#ifdef __cplusplus
}
#endif
